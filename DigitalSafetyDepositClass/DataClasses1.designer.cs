#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalSafetyDepositBoxClass
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSDBDatabase")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertFILE(FILE instance);
    partial void UpdateFILE(FILE instance);
    partial void DeleteFILE(FILE instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DigitalSafetyDepositBoxClass.Properties.Settings.Default.DSDBDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<FILE> FILEs
		{
			get
			{
				return this.GetTable<FILE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _user_name;
		
		private string _password;
		
		private System.Guid _password_salt;
		
		private string _email;
		
		private string _last_name;
		
		private string _first_name;
		
		private bool _admin;
		
		private bool _user_name_is_email;
		
		private bool _void_ind;
		
		private EntitySet<FILE> _FILEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onpassword_saltChanging(System.Guid value);
    partial void Onpassword_saltChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void OnadminChanging(bool value);
    partial void OnadminChanged();
    partial void Onuser_name_is_emailChanging(bool value);
    partial void Onuser_name_is_emailChanged();
    partial void Onvoid_indChanging(bool value);
    partial void Onvoid_indChanged();
    #endregion
		
		public USER()
		{
			this._FILEs = new EntitySet<FILE>(new Action<FILE>(this.attach_FILEs), new Action<FILE>(this.detach_FILEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_salt", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid password_salt
		{
			get
			{
				return this._password_salt;
			}
			set
			{
				if ((this._password_salt != value))
				{
					this.Onpassword_saltChanging(value);
					this.SendPropertyChanging();
					this._password_salt = value;
					this.SendPropertyChanged("password_salt");
					this.Onpassword_saltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin", DbType="Bit NOT NULL")]
		public bool admin
		{
			get
			{
				return this._admin;
			}
			set
			{
				if ((this._admin != value))
				{
					this.OnadminChanging(value);
					this.SendPropertyChanging();
					this._admin = value;
					this.SendPropertyChanged("admin");
					this.OnadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name_is_email", DbType="Bit NOT NULL")]
		public bool user_name_is_email
		{
			get
			{
				return this._user_name_is_email;
			}
			set
			{
				if ((this._user_name_is_email != value))
				{
					this.Onuser_name_is_emailChanging(value);
					this.SendPropertyChanging();
					this._user_name_is_email = value;
					this.SendPropertyChanged("user_name_is_email");
					this.Onuser_name_is_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_void_ind", DbType="Bit NOT NULL")]
		public bool void_ind
		{
			get
			{
				return this._void_ind;
			}
			set
			{
				if ((this._void_ind != value))
				{
					this.Onvoid_indChanging(value);
					this.SendPropertyChanging();
					this._void_ind = value;
					this.SendPropertyChanged("void_ind");
					this.Onvoid_indChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_FILE", Storage="_FILEs", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<FILE> FILEs
		{
			get
			{
				return this._FILEs;
			}
			set
			{
				this._FILEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FILEs(FILE entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_FILEs(FILE entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FILES")]
	public partial class FILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _file_id;
		
		private string _file_name;
		
		private System.Data.Linq.Binary _file_contents;
		
		private string _type;
		
		private string _container_name;
		
		private int _user_id;
		
		private string _void_int;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfile_idChanging(int value);
    partial void Onfile_idChanged();
    partial void Onfile_nameChanging(string value);
    partial void Onfile_nameChanged();
    partial void Onfile_contentsChanging(System.Data.Linq.Binary value);
    partial void Onfile_contentsChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Oncontainer_nameChanging(string value);
    partial void Oncontainer_nameChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onvoid_intChanging(string value);
    partial void Onvoid_intChanged();
    #endregion
		
		public FILE()
		{
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int file_id
		{
			get
			{
				return this._file_id;
			}
			set
			{
				if ((this._file_id != value))
				{
					this.Onfile_idChanging(value);
					this.SendPropertyChanging();
					this._file_id = value;
					this.SendPropertyChanged("file_id");
					this.Onfile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_name", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string file_name
		{
			get
			{
				return this._file_name;
			}
			set
			{
				if ((this._file_name != value))
				{
					this.Onfile_nameChanging(value);
					this.SendPropertyChanging();
					this._file_name = value;
					this.SendPropertyChanged("file_name");
					this.Onfile_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_contents", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary file_contents
		{
			get
			{
				return this._file_contents;
			}
			set
			{
				if ((this._file_contents != value))
				{
					this.Onfile_contentsChanging(value);
					this.SendPropertyChanging();
					this._file_contents = value;
					this.SendPropertyChanged("file_contents");
					this.Onfile_contentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_container_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string container_name
		{
			get
			{
				return this._container_name;
			}
			set
			{
				if ((this._container_name != value))
				{
					this.Oncontainer_nameChanging(value);
					this.SendPropertyChanging();
					this._container_name = value;
					this.SendPropertyChanged("container_name");
					this.Oncontainer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_void_int", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string void_int
		{
			get
			{
				return this._void_int;
			}
			set
			{
				if ((this._void_int != value))
				{
					this.Onvoid_intChanging(value);
					this.SendPropertyChanging();
					this._void_int = value;
					this.SendPropertyChanged("void_int");
					this.Onvoid_intChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_FILE", Storage="_USER", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.FILEs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.FILEs.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
